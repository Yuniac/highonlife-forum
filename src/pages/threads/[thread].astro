---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";
import Table from "../../components/Table.astro";
import { normalizeSlug } from "../../utils/normalizeSlug";
import { getEntry } from "astro:content";
import { getEntries } from "astro:content";
import { getCollection } from "astro:content";
import type { ContentEntryMap } from "astro:content";

export function getStaticPaths() {
  return [
    { params: { thread: "blim-city-banter" } },
    { params: { thread: "combat-tactics-and-strategies" } },
    { params: { thread: "zephyr-paradise" } },
    { params: { thread: "port-terrene-hangout" } },
  ];
}

interface Props {
  thread: string;
}

const { thread } = Astro.params;

const rules = await getEntry("shared", "rules");
const currentThread = await getCollection(thread as keyof ContentEntryMap);

const rows = currentThread.map((entry) => ({
  title: entry.data.title,
  replies: entry.data.replies,
  views: entry.data.views,
}));

const defaultRow = {
  title: rules.data.title,
  replies: rules.data.replies,
  views: rules.data.views,
  root: true,
};
---

<Layout title={normalizeSlug(thread)}>
  <Header title={normalizeSlug(thread).toUpperCase()} />
  <div class="px-10 w-full flex flex-col gap-8">
    <Table
      thread={thread}
      headers={[normalizeSlug(thread).toUpperCase(), "REPLIES", "VIEWS"]}
      rows={[defaultRow]}
    />
    <Table
      thread={thread}
      headers={[normalizeSlug(thread).toUpperCase(), "REPLIES", "VIEWS"]}
      rows={rows}
    />
    <button
      onclick="window.history.go(-1)"
      class="text-white p-4 rounded-full shadow-lg"
    >
      Go Back
    </button>
  </div>
</Layout>

<style>
  button {
    position: fixed;
    bottom: 2.5rem;
    right: 2.5rem;

    background: linear-gradient(
      180deg,
      rgba(58, 80, 183, 1) 16%,
      rgba(19, 21, 26, 1) 100%
    );
  }
</style>
