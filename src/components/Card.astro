---
import { getEntry } from "astro:content";

interface Props {
  data: {
    title: string;
    description: string;
    slug: string;
    collection: string;
    comments: { author: string; content: string }[];
  };
}

const {
  data: { title, description, slug, comments },
} = Astro.props;

const entry = await getEntry("blim-city", slug);
---

<li>
  <div class="container">
    <div class="link-card">
      <a href="{href}">
        <h2>{title}</h2>
        <p>{description}</p>
      </a>
    </div>
  </div>
  <ul>
    {
      comments.map((c) => (
        <li>
          <a>{c.author}</a>
          <p>{c.content}</p>
        </li>
      ))
    }
  </ul>
</li>

<style>
  .container {
    scrollbar-color: white transparent;
    scrollbar-width: thin;
    overflow: scroll;

    &::-webkit-scrollbar {
      width: 8px;
    }

    &::-webkit-scrollbar-thumb {
      background-color: white;
      border-radius: 10px;
    }

    &::-webkit-scrollbar-track {
      background: transparent;
    }
  }

  .link-card {
    list-style: none;
    display: flex;
    padding: 1px;
    background-color: #23262d;
    background-image: none;
    background-size: 400%;
    border: 1px solid white;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: white;
    background-color: #23262d;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    border-bottom: 1px solid var(--main);
    width: fit-content;
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    font-size: 0.75rem;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
</style>
