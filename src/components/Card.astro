---
interface Props {
  data: {
    title: string;
    description: string;
    slug: string;
    collection: string;
    comments: { author: string; content: string }[];
  };
}

const {
  data: { title, description, slug },
} = Astro.props;
---

<a class="flex gap-4 overflow-scroll" href={`/threads/${slug}`}>
  <div class="container">
    <div class="link-card">
      <h2>{title}</h2>
      <p>{description}</p>
    </div>
  </div>
  <hr class="bordered-container" />
</a>

<style>
  .container {
    scrollbar-color: white transparent;
    scrollbar-width: thin;
    overflow: scroll;

    &::-webkit-scrollbar {
      width: 8px;
    }

    &::-webkit-scrollbar-thumb {
      background-color: white;
      border-radius: 10px;
    }

    &::-webkit-scrollbar-track {
      background: transparent;
    }
  }

  .bordered-container:not(:first) {
    border-top: 1px solid var(--main);
    border-bottom: 1px solid var(--main);
  }

  .link-card {
    list-style: none;
    display: flex;
    flex-direction: column;
    padding: 1px;
    background-color: #23262d;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    padding: 1.3rem;
  }
  .link-card:hover {
    border: 1px solid white;
  }

  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    border-bottom: 1px solid var(--main);
    width: fit-content;
    color: var(--main);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    font-size: 0.75rem;
    color: var(--main);
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
</style>
